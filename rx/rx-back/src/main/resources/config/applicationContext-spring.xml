<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
                            http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd"
	default-autowire="byName">

	<!-- 属性文件读入 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/config.properties</value>
			</list>
		</property>
	</bean>

	<!-- druid连接池配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 用户名，密码，数据库驱动，地址 -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxActive" value="100" />
		<!-- 连接池中保留的最小连接数，默认为：3 -->
		<property name="minIdle" value="5" />
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
		<property name="initialSize" value="5" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache,在mysql下建议关闭。并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>
	
	<!-- 配置sqlSessionFactory，spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="mybatisSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载Mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。  
         *是个通配符，代表所有的文件，**代表所有目录下 -->
		<property name="mapperLocations" value="classpath*:com/rx/dao/mapper/*.xml" />
	</bean>

	<!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean> -->
	
	<!-- 配置mapper扫描器，DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包路径，如果需要扫描多个包中间用半角逗号隔开 -->
		<property name="basePackage" value="com.rx.dao" />
		<!-- 这里不能使用的配置  name=sqlSessionFactory 这样子会导致 数据源中spring注入项还未注入就初始化了数据源 -->
		<property name="sqlSessionFactoryBeanName" value="mybatisSqlSessionFactory" />
		<!-- <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" /> -->
	</bean>
	
	<!-- 声明式事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- 扫描service -->
	<context:component-scan base-package="com.rx.service" />
	
	<!-- 定时任务 -->
	<task:annotation-driven /> <!-- 定时器开关-->

	<bean id="syncDrugTask" class="com.rx.back.task.SyncDrugInfoTask"></bean> 
	<task:scheduled-tasks> 
		<!-- 这里表示的是每分钟执行一次 -->
		<!-- <task:scheduled ref="syncDrugTask" method="sync" cron="0 */1 * * * ?" /> --> 
	</task:scheduled-tasks>
 
	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.rx.back.task" />
	
	
</beans>